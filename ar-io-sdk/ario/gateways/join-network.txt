1:"$Sreact.fragment"
2:I[60881,["9268","static/chunks/aaea2bcf-432631bb317559fe.js","3975","static/chunks/3975-65073ecd7686b488.js","5227","static/chunks/5227-c718075fe01526db.js","3758","static/chunks/3758-69daa9d9751a2510.js","7066","static/chunks/7066-9ea237f8271c6a3e.js","7948","static/chunks/7948-a65c3b38484f326d.js","7177","static/chunks/app/layout-e6c39d6a15228dbb.js"],"Providers"]
3:I[30895,["9268","static/chunks/aaea2bcf-432631bb317559fe.js","3975","static/chunks/3975-65073ecd7686b488.js","5227","static/chunks/5227-c718075fe01526db.js","3758","static/chunks/3758-69daa9d9751a2510.js","7066","static/chunks/7066-9ea237f8271c6a3e.js","7948","static/chunks/7948-a65c3b38484f326d.js","7177","static/chunks/app/layout-e6c39d6a15228dbb.js"],"Layout"]
4:I[87555,[],""]
5:I[31295,[],""]
6:I[30122,["3975","static/chunks/3975-65073ecd7686b488.js","4345","static/chunks/app/not-found-28cf6d37da7270ee.js"],"default"]
7:I[81571,["9268","static/chunks/aaea2bcf-432631bb317559fe.js","3975","static/chunks/3975-65073ecd7686b488.js","5227","static/chunks/5227-c718075fe01526db.js","6493","static/chunks/6493-a59dcbabb32c712c.js","465","static/chunks/465-0fbb9cc11ad8feb4.js","868","static/chunks/app/ar-io-sdk/ario/gateways/join-network/page-5288b846d4d2ff6c.js"],"Code"]
8:I[87254,["9268","static/chunks/aaea2bcf-432631bb317559fe.js","3975","static/chunks/3975-65073ecd7686b488.js","5227","static/chunks/5227-c718075fe01526db.js","6493","static/chunks/6493-a59dcbabb32c712c.js","465","static/chunks/465-0fbb9cc11ad8feb4.js","868","static/chunks/app/ar-io-sdk/ario/gateways/join-network/page-5288b846d4d2ff6c.js"],"Heading"]
9:I[81571,["9268","static/chunks/aaea2bcf-432631bb317559fe.js","3975","static/chunks/3975-65073ecd7686b488.js","5227","static/chunks/5227-c718075fe01526db.js","6493","static/chunks/6493-a59dcbabb32c712c.js","465","static/chunks/465-0fbb9cc11ad8feb4.js","868","static/chunks/app/ar-io-sdk/ario/gateways/join-network/page-5288b846d4d2ff6c.js"],"CodeGroup"]
a:I[81571,["9268","static/chunks/aaea2bcf-432631bb317559fe.js","3975","static/chunks/3975-65073ecd7686b488.js","5227","static/chunks/5227-c718075fe01526db.js","6493","static/chunks/6493-a59dcbabb32c712c.js","465","static/chunks/465-0fbb9cc11ad8feb4.js","868","static/chunks/app/ar-io-sdk/ario/gateways/join-network/page-5288b846d4d2ff6c.js"],"Pre"]
10:I[73019,["9268","static/chunks/aaea2bcf-432631bb317559fe.js","3975","static/chunks/3975-65073ecd7686b488.js","5227","static/chunks/5227-c718075fe01526db.js","6493","static/chunks/6493-a59dcbabb32c712c.js","465","static/chunks/465-0fbb9cc11ad8feb4.js","868","static/chunks/app/ar-io-sdk/ario/gateways/join-network/page-5288b846d4d2ff6c.js"],"Feedback"]
11:I[59665,[],"OutletBoundary"]
14:I[74911,[],"AsyncMetadataOutlet"]
16:I[59665,[],"ViewportBoundary"]
18:I[59665,[],"MetadataBoundary"]
1a:I[26614,[],""]
:HL["/docs-v2/_next/static/css/fb35069fc41fe679.css","style"]
b:T151c,<span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> { id: </span><span style="color: var(--shiki-token-constant)">txId</span><span style="color: var(--shiki-color-text)"> } </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">ario</span><span style="color: var(--shiki-token-function)">.joinNetwork</span><span style="color: var(--shiki-color-text)">({</span></span>
<span><span style="color: var(--shiki-color-text)">    qty</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">new</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">ARIOToken</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">10_000</span><span style="color: var(--shiki-color-text)">)</span><span style="color: var(--shiki-token-function)">.toMARIO</span><span style="color: var(--shiki-color-text)">()</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">    autoStake</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">true</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">    allowDelegatedStaking</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">true</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">    minDelegatedStake</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">new</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">ARIOToken</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">100</span><span style="color: var(--shiki-color-text)">)</span><span style="color: var(--shiki-token-function)">.toMARIO</span><span style="color: var(--shiki-color-text)">()</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">    delegateRewardShareRatio</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">10</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">    label</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;john smith&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">    note</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;The example gateway&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">    properties</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;FH1aVetOoulPGqgYukj0VE0wIhDy90WiQoV3U2PeY44&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">    observerWallet</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;0VE0wIhDy90WiQoV3U2PeY44FH1aVetOoulPGqgYukj&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">    fqdn</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;example.com&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">    port</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">443</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">    protocol</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;https&#39;</span></span>
<span><span style="color: var(--shiki-color-text)">});</span></span>
<span></span>c:T5df, const fs = require("fs");
 const { ARIO, ArweaveSigner, ARIOToken } = require("@ar.io/sdk");

 async function main() {
 const jwk = JSON.parse(fs.readFileSync("KeyFile.json"));
 const ario = ARIO.init({
     signer: new ArweaveSigner(jwk),
 });

 const { id: txId } = await ario.joinNetwork(
     {
         qty: new ARIOToken(10_000).toMARIO(), // minimum operator stake allowed
         autoStake: true, // auto-stake operator rewards to the gateway
         allowDelegatedStaking: true, // allows delegated staking
         minDelegatedStake: new ARIOToken(100).toMARIO(), // minimum delegated stake allowed
         delegateRewardShareRatio: 10, // percentage of rewards to share with delegates (e.g. 10%)
         label: 'john smith', // min 1, max 64 characters
         note: 'The example gateway', // max 256 characters
         properties: 'FH1aVetOoulPGqgYukj0VE0wIhDy90WiQoV3U2PeY44', // Arweave transaction ID containing additional properties of the Gateway
         observerWallet: '0VE0wIhDy90WiQoV3U2PeY44FH1aVetOoulPGqgYukj', // wallet address of the observer, must match OBSERVER_WALLET on the observer
         fqdn: 'example.com', // fully qualified domain name - note: you must own the domain and set the OBSERVER_WALLET on your gateway to match `observerWallet`
         port: 443, // port number
         protocol: 'https', // only 'https' is supported
     },
     // optional additional tags
     { tags: [{ name: 'App-Name', value: 'My-Awesome-App' }] },
     );
 }

 main();

d:T32f9,<span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">fs</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">require</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&quot;fs&quot;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> { </span><span style="color: var(--shiki-token-constant)">ARIO</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">ArweaveSigner</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">ARIOToken</span><span style="color: var(--shiki-color-text)"> } </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">require</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&quot;@ar.io/sdk&quot;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span></span>
<span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">async</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">main</span><span style="color: var(--shiki-color-text)">() {</span></span>
<span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">jwk</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">JSON</span><span style="color: var(--shiki-token-function)">.parse</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">fs</span><span style="color: var(--shiki-token-function)">.readFileSync</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&quot;KeyFile.json&quot;</span><span style="color: var(--shiki-color-text)">));</span></span>
<span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">ario</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">ARIO</span><span style="color: var(--shiki-token-function)">.init</span><span style="color: var(--shiki-color-text)">({</span></span>
<span><span style="color: var(--shiki-color-text)">     signer</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">new</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">ArweaveSigner</span><span style="color: var(--shiki-color-text)">(jwk)</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)"> });</span></span>
<span></span>
<span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> { id: </span><span style="color: var(--shiki-token-constant)">txId</span><span style="color: var(--shiki-color-text)"> } </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">ario</span><span style="color: var(--shiki-token-function)">.joinNetwork</span><span style="color: var(--shiki-color-text)">(</span></span>
<span><span style="color: var(--shiki-color-text)">     {</span></span>
<span><span style="color: var(--shiki-color-text)">         qty</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">new</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">ARIOToken</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">10_000</span><span style="color: var(--shiki-color-text)">)</span><span style="color: var(--shiki-token-function)">.toMARIO</span><span style="color: var(--shiki-color-text)">()</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-comment)">// minimum operator stake allowed</span></span>
<span><span style="color: var(--shiki-color-text)">         autoStake</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">true</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-comment)">// auto-stake operator rewards to the gateway</span></span>
<span><span style="color: var(--shiki-color-text)">         allowDelegatedStaking</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">true</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-comment)">// allows delegated staking</span></span>
<span><span style="color: var(--shiki-color-text)">         minDelegatedStake</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">new</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">ARIOToken</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">100</span><span style="color: var(--shiki-color-text)">)</span><span style="color: var(--shiki-token-function)">.toMARIO</span><span style="color: var(--shiki-color-text)">()</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-comment)">// minimum delegated stake allowed</span></span>
<span><span style="color: var(--shiki-color-text)">         delegateRewardShareRatio</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">10</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-comment)">// percentage of rewards to share with delegates (e.g. 10%)</span></span>
<span><span style="color: var(--shiki-color-text)">         label</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;john smith&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-comment)">// min 1, max 64 characters</span></span>
<span><span style="color: var(--shiki-color-text)">         note</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;The example gateway&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-comment)">// max 256 characters</span></span>
<span><span style="color: var(--shiki-color-text)">         properties</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;FH1aVetOoulPGqgYukj0VE0wIhDy90WiQoV3U2PeY44&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-comment)">// Arweave transaction ID containing additional properties of the Gateway</span></span>
<span><span style="color: var(--shiki-color-text)">         observerWallet</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;0VE0wIhDy90WiQoV3U2PeY44FH1aVetOoulPGqgYukj&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-comment)">// wallet address of the observer, must match OBSERVER_WALLET on the observer</span></span>
<span><span style="color: var(--shiki-color-text)">         fqdn</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;example.com&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-comment)">// fully qualified domain name - note: you must own the domain and set the OBSERVER_WALLET on your gateway to match `observerWallet`</span></span>
<span><span style="color: var(--shiki-color-text)">         port</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">443</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-comment)">// port number</span></span>
<span><span style="color: var(--shiki-color-text)">         protocol</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;https&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-comment)">// only &#39;https&#39; is supported</span></span>
<span><span style="color: var(--shiki-color-text)">     }</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">     </span><span style="color: var(--shiki-token-comment)">// optional additional tags</span></span>
<span><span style="color: var(--shiki-color-text)">     { tags</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> [{ name</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;App-Name&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> value</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;My-Awesome-App&#39;</span><span style="color: var(--shiki-color-text)"> }] }</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">     );</span></span>
<span><span style="color: var(--shiki-color-text)"> }</span></span>
<span></span>
<span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">main</span><span style="color: var(--shiki-color-text)">();</span></span>
<span></span>
<span></span>e:T5d5,import { ARIO, ARIOToken, ArConnectSigner } from '@ar.io/sdk/web';

async function main() {
    const ario = ARIO.init({
        signer: new ArConnectSigner(window.arweaveWallet)
    })
    const { id: txId } = await ario.joinNetwork(
        {
            qty: new ARIOToken(10_000).toMARIO(), // minimum operator stake allowed
            autoStake: true, // auto-stake operator rewards to the gateway
            allowDelegatedStaking: true, // allows delegated staking
            minDelegatedStake: new ARIOToken(100).toMARIO(), // minimum delegated stake allowed
            delegateRewardShareRatio: 10, // percentage of rewards to share with delegates (e.g. 10%)
            label: 'john smith', // min 1, max 64 characters
            note: 'The example gateway', // max 256 characters
            properties: 'FH1aVetOoulPGqgYukj0VE0wIhDy90WiQoV3U2PeY44', // Arweave transaction ID containing additional properties of the Gateway
            observerWallet: '0VE0wIhDy90WiQoV3U2PeY44FH1aVetOoulPGqgYukj', // wallet address of the observer, must match OBSERVER_WALLET on the observer
            fqdn: 'example.com', // fully qualified domain name - note: you must own the domain and set the OBSERVER_WALLET on your gateway to match `observerWallet`
            port: 443, // port number
            protocol: 'https', // only 'https' is supported
        },
        // optional additional tags
        { tags: [{ name: 'App-Name', value: 'My-Awesome-App' }] },
        );
}

main();
f:T2b68,<span><span style="color: var(--shiki-token-keyword)">import</span><span style="color: var(--shiki-color-text)"> { ARIO</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> ARIOToken</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> ArConnectSigner } </span><span style="color: var(--shiki-token-keyword)">from</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;@ar.io/sdk/web&#39;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span></span>
<span><span style="color: var(--shiki-token-keyword)">async</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">main</span><span style="color: var(--shiki-color-text)">() {</span></span>
<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">ario</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">ARIO</span><span style="color: var(--shiki-token-function)">.init</span><span style="color: var(--shiki-color-text)">({</span></span>
<span><span style="color: var(--shiki-color-text)">        signer</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">new</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">ArConnectSigner</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">window</span><span style="color: var(--shiki-color-text)">.arweaveWallet)</span></span>
<span><span style="color: var(--shiki-color-text)">    })</span></span>
<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> { id: </span><span style="color: var(--shiki-token-constant)">txId</span><span style="color: var(--shiki-color-text)"> } </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">ario</span><span style="color: var(--shiki-token-function)">.joinNetwork</span><span style="color: var(--shiki-color-text)">(</span></span>
<span><span style="color: var(--shiki-color-text)">        {</span></span>
<span><span style="color: var(--shiki-color-text)">            qty</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">new</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">ARIOToken</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">10_000</span><span style="color: var(--shiki-color-text)">)</span><span style="color: var(--shiki-token-function)">.toMARIO</span><span style="color: var(--shiki-color-text)">()</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-comment)">// minimum operator stake allowed</span></span>
<span><span style="color: var(--shiki-color-text)">            autoStake</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">true</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-comment)">// auto-stake operator rewards to the gateway</span></span>
<span><span style="color: var(--shiki-color-text)">            allowDelegatedStaking</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">true</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-comment)">// allows delegated staking</span></span>
<span><span style="color: var(--shiki-color-text)">            minDelegatedStake</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">new</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">ARIOToken</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">100</span><span style="color: var(--shiki-color-text)">)</span><span style="color: var(--shiki-token-function)">.toMARIO</span><span style="color: var(--shiki-color-text)">()</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-comment)">// minimum delegated stake allowed</span></span>
<span><span style="color: var(--shiki-color-text)">            delegateRewardShareRatio</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">10</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-comment)">// percentage of rewards to share with delegates (e.g. 10%)</span></span>
<span><span style="color: var(--shiki-color-text)">            label</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;john smith&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-comment)">// min 1, max 64 characters</span></span>
<span><span style="color: var(--shiki-color-text)">            note</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;The example gateway&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-comment)">// max 256 characters</span></span>
<span><span style="color: var(--shiki-color-text)">            properties</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;FH1aVetOoulPGqgYukj0VE0wIhDy90WiQoV3U2PeY44&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-comment)">// Arweave transaction ID containing additional properties of the Gateway</span></span>
<span><span style="color: var(--shiki-color-text)">            observerWallet</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;0VE0wIhDy90WiQoV3U2PeY44FH1aVetOoulPGqgYukj&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-comment)">// wallet address of the observer, must match OBSERVER_WALLET on the observer</span></span>
<span><span style="color: var(--shiki-color-text)">            fqdn</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;example.com&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-comment)">// fully qualified domain name - note: you must own the domain and set the OBSERVER_WALLET on your gateway to match `observerWallet`</span></span>
<span><span style="color: var(--shiki-color-text)">            port</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">443</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-comment)">// port number</span></span>
<span><span style="color: var(--shiki-color-text)">            protocol</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;https&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-comment)">// only &#39;https&#39; is supported</span></span>
<span><span style="color: var(--shiki-color-text)">        }</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">        </span><span style="color: var(--shiki-token-comment)">// optional additional tags</span></span>
<span><span style="color: var(--shiki-color-text)">        { tags</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> [{ name</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;App-Name&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> value</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;My-Awesome-App&#39;</span><span style="color: var(--shiki-color-text)"> }] }</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">        );</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>
<span><span style="color: var(--shiki-token-function)">main</span><span style="color: var(--shiki-color-text)">();</span></span>
<span></span>0:{"P":null,"b":"cASS-352ww4ImLxkvsFCJ","p":"/docs-v2","c":["","ar-io-sdk","ario","gateways","join-network"],"i":false,"f":[[["",{"children":["ar-io-sdk",{"children":["ario",{"children":["gateways",{"children":["join-network",{"children":["__PAGE__",{}]}]}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/docs-v2/_next/static/css/fb35069fc41fe679.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"en","className":"h-full","suppressHydrationWarning":true,"children":["$","body",null,{"className":"flex min-h-full bg-white antialiased dark:bg-zinc-900","children":["$","$L2",null,{"children":["$","$L3",null,{"children":["$","$L4",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","$L6",null,{}],[]],"forbidden":"$undefined","unauthorized":"$undefined"}]}]}]}]}]]}],{"children":["ar-io-sdk",["$","$1","c",{"children":[null,["$","$L4",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["ario",["$","$1","c",{"children":[null,["$","$L4",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["gateways",["$","$1","c",{"children":[null,["$","$L4",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["join-network",["$","$1","c",{"children":[null,["$","$L4",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":[["$","article",null,{"className":"flex h-full w-full flex-col pb-10 pt-16","children":[["$","div",null,{"className":"flex-auto prose w-full dark:prose-invert","children":[["$","h1",null,{"children":"joinNetwork"}],"\n",["$","p",null,{"language":"txt","children":[["$","$L7",null,{"children":"joinNetwork"}]," is a method on the ",["$","$L7",null,{"children":"ARIO"}]," class that joins a gateway to the ar.io network using its associated wallet."]}],"\n",["$","p",null,{"language":"txt","children":[["$","$L7",null,{"children":"joinNetwork"}]," requires authentication."]}],"\n",["$","$L8",null,{"level":2,"id":"examples","children":"Examples"}],"\n",["$","$L9",null,{"title":"joinNetwork","children":[["$","$La",null,{"language":"typescript","code":"const { id: txId } = await ario.joinNetwork({\n    qty: new ARIOToken(10_000).toMARIO(),\n    autoStake: true,\n    allowDelegatedStaking: true,\n    minDelegatedStake: new ARIOToken(100).toMARIO(),\n    delegateRewardShareRatio: 10,\n    label: 'john smith',\n    note: 'The example gateway',\n    properties: 'FH1aVetOoulPGqgYukj0VE0wIhDy90WiQoV3U2PeY44',\n    observerWallet: '0VE0wIhDy90WiQoV3U2PeY44FH1aVetOoulPGqgYukj',\n    fqdn: 'example.com',\n    port: 443,\n    protocol: 'https'\n});\n","children":["$","$L7",null,{"className":"language-typescript","children":"$b"}],"title":"Basic"}],["$","$La",null,{"language":"typescript","code":"$c","children":["$","$L7",null,{"className":"language-typescript","children":"$d"}],"title":"NodeJS"}],["$","$La",null,{"language":"typescript","code":"$e","children":["$","$L7",null,{"className":"language-typescript","children":"$f"}],"title":"Web"}]]}],"\n",["$","$L8",null,{"level":2,"id":"parameters","children":"Parameters"}],"\n",["$","div",null,{"className":"my-6 flex w-full justify-center","style":"$undefined","children":["$","table",null,{"className":"inline-table","style":"$undefined","children":[["$","thead",null,{"className":"$undefined","children":["$","tr",null,{"className":"$undefined","children":[["$","th",null,{"className":"$undefined","children":"Parameter"}],["$","th",null,{"className":"$undefined","children":"Type"}],["$","th",null,{"className":"$undefined","children":"Description"}],["$","th",null,{"className":"$undefined","children":"Required"}]]}]}],["$","tbody",null,{"className":"$undefined","children":[["$","tr",null,{"className":"$undefined","children":[["$","td",null,{"className":"font-semibold","children":"qty"}],["$","td",null,{"className":"$undefined","children":"number"}],["$","td",null,{"className":"$undefined","children":"Amount in mARIO to stake when joining network"}],["$","td",null,{"className":"$undefined","children":"Yes"}]]}],["$","tr",null,{"className":"$undefined","children":[["$","td",null,{"className":"font-semibold","children":"autoStake"}],["$","td",null,{"className":"$undefined","children":"boolean"}],["$","td",null,{"className":"$undefined","children":"Whether to automatically stake gateway rewards"}],["$","td",null,{"className":"$undefined","children":"Yes"}]]}],["$","tr",null,{"className":"$undefined","children":[["$","td",null,{"className":"font-semibold","children":"allowDelegatedStaking"}],["$","td",null,{"className":"$undefined","children":"boolean"}],["$","td",null,{"className":"$undefined","children":"Whether to allow third parties to delegate stake"}],["$","td",null,{"className":"$undefined","children":"Yes"}]]}],["$","tr",null,{"className":"$undefined","children":[["$","td",null,{"className":"font-semibold","children":"minDelegatedStake"}],["$","td",null,{"className":"$undefined","children":"number"}],["$","td",null,{"className":"$undefined","children":"Minimum amount in mARIO that can be delegated"}],["$","td",null,{"className":"$undefined","children":"Yes"}]]}],["$","tr",null,{"className":"$undefined","children":[["$","td",null,{"className":"font-semibold","children":["$","p",null,{"children":"delegateRewardShareRatio"}]}],["$","td",null,{"className":"$undefined","children":"number"}],["$","td",null,{"className":"$undefined","children":["$","p",null,{"children":"Percentage of rewards to share with delegates (e.g., 10)"}]}],["$","td",null,{"className":"$undefined","children":"Yes"}]]}],["$","tr",null,{"className":"$undefined","children":[["$","td",null,{"className":"font-semibold","children":"label"}],["$","td",null,{"className":"$undefined","children":"string"}],["$","td",null,{"className":"$undefined","children":"Gateway name (1-64 characters)"}],["$","td",null,{"className":"$undefined","children":"Yes"}]]}],["$","tr",null,{"className":"$undefined","children":[["$","td",null,{"className":"font-semibold","children":"note"}],["$","td",null,{"className":"$undefined","children":"string"}],["$","td",null,{"className":"$undefined","children":"Gateway description (max 256 characters)"}],["$","td",null,{"className":"$undefined","children":"Yes"}]]}],["$","tr",null,{"className":"$undefined","children":[["$","td",null,{"className":"font-semibold","children":"properties"}],["$","td",null,{"className":"$undefined","children":"string"}],["$","td",null,{"className":"$undefined","children":["$","p",null,{"children":"Arweave transaction ID containing additional gateway configuration"}]}],["$","td",null,{"className":"$undefined","children":"Yes"}]]}],["$","tr",null,{"className":"$undefined","children":[["$","td",null,{"className":"font-semibold","children":"observerWallet"}],["$","td",null,{"className":"$undefined","children":"string"}],["$","td",null,{"className":"$undefined","children":"Wallet address used for network observations"}],["$","td",null,{"className":"$undefined","children":"Yes"}]]}],["$","tr",null,{"className":"$undefined","children":[["$","td",null,{"className":"font-semibold","children":"fqdn"}],["$","td",null,{"className":"$undefined","children":"string"}],["$","td",null,{"className":"$undefined","children":"Valid domain name owned by the gateway operator"}],["$","td",null,{"className":"$undefined","children":"Yes"}]]}],["$","tr",null,{"className":"$undefined","children":[["$","td",null,{"className":"font-semibold","children":"port"}],["$","td",null,{"className":"$undefined","children":"number"}],["$","td",null,{"className":"$undefined","children":"Port number for gateway access (typically 443)"}],["$","td",null,{"className":"$undefined","children":"Yes"}]]}],["$","tr",null,{"className":"$undefined","children":[["$","td",null,{"className":"font-semibold","children":"protocol"}],["$","td",null,{"className":"$undefined","children":"string"}],["$","td",null,{"className":"$undefined","children":"Access protocol (only 'https' supported)"}],["$","td",null,{"className":"$undefined","children":"Yes"}]]}],["$","tr",null,{"className":"$undefined","children":[["$","td",null,{"className":"font-semibold","children":"tags"}],["$","td",null,{"className":"$undefined","children":"array"}],["$","td",null,{"className":"$undefined","children":["$","p",null,{"children":"An array of GQL tag objects to attach to the transaction"}]}],["$","td",null,{"className":"$undefined","children":"No"}]]}]]}]]}]}]]}],["$","footer",null,{"className":"mx-auto mt-16 w-full max-w-2xl lg:max-w-5xl","children":["$","$L10",null,{}]}]]}],null,["$","$L11",null,{"children":["$L12","$L13",["$","$L14",null,{"promise":"$@15"}]]}]]}],{},null,false]},null,false]},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,["$","$1","Blul7h-11b6Ds5XVr1tN4v",{"children":[["$","$L16",null,{"children":"$L17"}],null]}],["$","$L18",null,{"children":"$L19"}]]}],false]],"m":"$undefined","G":["$1a","$undefined"],"s":false,"S":true}
1b:"$Sreact.suspense"
1c:I[74911,[],"AsyncMetadata"]
19:["$","div",null,{"hidden":true,"children":["$","$1b",null,{"fallback":null,"children":["$","$L1c",null,{"promise":"$@1d"}]}]}]
13:null
17:[["$","meta","0",{"charSet":"utf-8"}],["$","meta","1",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
12:null
15:{"metadata":[["$","title","0",{"children":"joinNetwork - AR.IO Docs"}],["$","meta","1",{"name":"description","content":"Join a new AR.IO gateway to the Gateway Network"}],["$","meta","2",{"property":"og:title","content":"joinNetwork"}],["$","meta","3",{"property":"og:description","content":"Join a new AR.IO gateway to the Gateway Network"}],["$","meta","4",{"name":"twitter:card","content":"summary"}],["$","meta","5",{"name":"twitter:title","content":"joinNetwork"}],["$","meta","6",{"name":"twitter:description","content":"Join a new AR.IO gateway to the Gateway Network"}],["$","link","7",{"rel":"icon","href":"/docs-v2/favicon.ico","type":"image/x-icon","sizes":"16x16"}]],"error":null,"digest":"$undefined"}
1d:{"metadata":"$15:metadata","error":null,"digest":"$undefined"}
