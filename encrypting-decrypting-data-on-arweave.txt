1:"$Sreact.fragment"
2:I[60881,["9268","static/chunks/aaea2bcf-432631bb317559fe.js","3975","static/chunks/3975-65073ecd7686b488.js","5227","static/chunks/5227-c718075fe01526db.js","3758","static/chunks/3758-69daa9d9751a2510.js","7066","static/chunks/7066-9ea237f8271c6a3e.js","7948","static/chunks/7948-bc1a3f31d95d4752.js","7177","static/chunks/app/layout-b825f93bc4501ddc.js"],"Providers"]
3:I[30895,["9268","static/chunks/aaea2bcf-432631bb317559fe.js","3975","static/chunks/3975-65073ecd7686b488.js","5227","static/chunks/5227-c718075fe01526db.js","3758","static/chunks/3758-69daa9d9751a2510.js","7066","static/chunks/7066-9ea237f8271c6a3e.js","7948","static/chunks/7948-bc1a3f31d95d4752.js","7177","static/chunks/app/layout-b825f93bc4501ddc.js"],"Layout"]
4:I[87555,[],""]
5:I[31295,[],""]
6:I[30122,["3975","static/chunks/3975-65073ecd7686b488.js","4345","static/chunks/app/not-found-28cf6d37da7270ee.js"],"default"]
7:I[87254,["9268","static/chunks/aaea2bcf-432631bb317559fe.js","3975","static/chunks/3975-65073ecd7686b488.js","5227","static/chunks/5227-c718075fe01526db.js","6493","static/chunks/6493-a59dcbabb32c712c.js","465","static/chunks/465-0fbb9cc11ad8feb4.js","9257","static/chunks/app/encrypting-decrypting-data-on-arweave/page-16b34559a57d190a.js"],"Heading"]
8:I[81571,["9268","static/chunks/aaea2bcf-432631bb317559fe.js","3975","static/chunks/3975-65073ecd7686b488.js","5227","static/chunks/5227-c718075fe01526db.js","6493","static/chunks/6493-a59dcbabb32c712c.js","465","static/chunks/465-0fbb9cc11ad8feb4.js","9257","static/chunks/app/encrypting-decrypting-data-on-arweave/page-16b34559a57d190a.js"],"Pre"]
9:I[81571,["9268","static/chunks/aaea2bcf-432631bb317559fe.js","3975","static/chunks/3975-65073ecd7686b488.js","5227","static/chunks/5227-c718075fe01526db.js","6493","static/chunks/6493-a59dcbabb32c712c.js","465","static/chunks/465-0fbb9cc11ad8feb4.js","9257","static/chunks/app/encrypting-decrypting-data-on-arweave/page-16b34559a57d190a.js"],"Code"]
b:I[73019,["9268","static/chunks/aaea2bcf-432631bb317559fe.js","3975","static/chunks/3975-65073ecd7686b488.js","5227","static/chunks/5227-c718075fe01526db.js","6493","static/chunks/6493-a59dcbabb32c712c.js","465","static/chunks/465-0fbb9cc11ad8feb4.js","9257","static/chunks/app/encrypting-decrypting-data-on-arweave/page-16b34559a57d190a.js"],"Feedback"]
c:I[59665,[],"OutletBoundary"]
f:I[74911,[],"AsyncMetadataOutlet"]
11:I[59665,[],"ViewportBoundary"]
13:I[59665,[],"MetadataBoundary"]
15:I[26614,[],""]
:HL["/docs-v2/_next/static/css/af2d6aec183849c2.css","style"]
a:T1968,<span><span style="color: var(--shiki-token-keyword)">import</span><span style="color: var(--shiki-color-text)"> CryptoJS </span><span style="color: var(--shiki-token-keyword)">from</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;crypto-js&#39;</span></span>
<span></span>
<span><span style="color: var(--shiki-token-comment)">// Encrypt data before uploading</span></span>
<span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">data</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;Sensitive information&#39;</span></span>
<span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">secretKey</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;your-secret-key&#39;</span></span>
<span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">encryptedData</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">CryptoJS</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">AES</span><span style="color: var(--shiki-token-function)">.encrypt</span><span style="color: var(--shiki-color-text)">(data</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> secretKey)</span><span style="color: var(--shiki-token-function)">.toString</span><span style="color: var(--shiki-color-text)">()</span></span>
<span></span>
<span><span style="color: var(--shiki-token-comment)">// Upload with encryption tags</span></span>
<span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">transaction</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">arweave</span><span style="color: var(--shiki-token-function)">.createTransaction</span><span style="color: var(--shiki-color-text)">({</span></span>
<span><span style="color: var(--shiki-color-text)">  data</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> encryptedData</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">  tags</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> [</span></span>
<span><span style="color: var(--shiki-color-text)">    { name</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;Encryption-Type&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> value</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;AES&#39;</span><span style="color: var(--shiki-color-text)"> }</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">    { name</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;Encryption-Algorithm&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> value</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;AES-256-CBC&#39;</span><span style="color: var(--shiki-color-text)"> }</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">  ]</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">})</span></span>
<span></span>
<span><span style="color: var(--shiki-token-comment)">// Decrypt when retrieving</span></span>
<span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">decryptedData</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">CryptoJS</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">AES</span><span style="color: var(--shiki-token-function)">.decrypt</span><span style="color: var(--shiki-color-text)">(encryptedData</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> secretKey)</span><span style="color: var(--shiki-token-function)">.toString</span><span style="color: var(--shiki-color-text)">(</span></span>
<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">CryptoJS</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">enc</span><span style="color: var(--shiki-color-text)">.Utf8</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">)</span></span>
<span></span>0:{"P":null,"b":"ju0DZki98M8q3H26MrSOM","p":"/docs-v2","c":["","encrypting-decrypting-data-on-arweave"],"i":false,"f":[[["",{"children":["encrypting-decrypting-data-on-arweave",{"children":["__PAGE__",{}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/docs-v2/_next/static/css/af2d6aec183849c2.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"en","className":"h-full","suppressHydrationWarning":true,"children":["$","body",null,{"className":"flex min-h-full bg-white antialiased dark:bg-zinc-900","children":["$","$L2",null,{"children":["$","$L3",null,{"children":["$","$L4",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","$L6",null,{}],[]],"forbidden":"$undefined","unauthorized":"$undefined"}]}]}]}]}]]}],{"children":["encrypting-decrypting-data-on-arweave",["$","$1","c",{"children":[null,["$","$L4",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":[["$","article",null,{"className":"flex h-full w-full flex-col pb-10 pt-16","children":[["$","div",null,{"className":"flex-auto prose w-full dark:prose-invert","children":[["$","h1",null,{"children":"Encrypting / Decrypting data on Arweave"}],"\n",["$","p",null,{"children":"Arweave itself is completely agnostic to encryption, which means all encryption and decryption must be handled client-side by your application. This approach gives you complete control over your data security while ensuring that Arweave can store any type of data without restrictions."}],"\n",["$","p",null,{"children":"The most common approach is to encrypt your data before uploading it to Arweave, then decrypt it when retrieving. This ensures that even though your data is stored on a public network, only those with the proper decryption keys can access the actual content. You can use any encryption algorithm or library that suits your needs."}],"\n",["$","p",null,{"children":"A best practice is to include tags indicating the type of encryption used when uploading encrypted data. This makes it easier for clients to know how to decrypt the data correctly. Common tags include \"Encryption-Type\", \"Encryption-Algorithm\", or \"Encryption-Version\" to help with proper decryption."}],"\n",["$","$L7",null,{"level":2,"id":"quick-start-guide","children":"Quick Start Guide"}],"\n",["$","p",null,{"children":"Here's a basic example of encrypting data before uploading to Arweave:"}],"\n",["$","$L8",null,{"language":"javascript","code":"import CryptoJS from 'crypto-js'\n\n// Encrypt data before uploading\nconst data = 'Sensitive information'\nconst secretKey = 'your-secret-key'\nconst encryptedData = CryptoJS.AES.encrypt(data, secretKey).toString()\n\n// Upload with encryption tags\nconst transaction = await arweave.createTransaction({\n  data: encryptedData,\n  tags: [\n    { name: 'Encryption-Type', value: 'AES' },\n    { name: 'Encryption-Algorithm', value: 'AES-256-CBC' },\n  ],\n})\n\n// Decrypt when retrieving\nconst decryptedData = CryptoJS.AES.decrypt(encryptedData, secretKey).toString(\n  CryptoJS.enc.Utf8,\n)\n","children":["$","$L9",null,{"className":"language-javascript","children":"$a"}]}],"\n",["$","p",null,{"children":"Remember to keep your encryption keys secure and consider using key derivation functions for production applications."}]]}],["$","footer",null,{"className":"mx-auto mt-16 w-full max-w-2xl lg:max-w-5xl","children":["$","$Lb",null,{}]}]]}],null,["$","$Lc",null,{"children":["$Ld","$Le",["$","$Lf",null,{"promise":"$@10"}]]}]]}],{},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,["$","$1","CHUee_xw3scf_Ka9mZffFv",{"children":[["$","$L11",null,{"children":"$L12"}],null]}],["$","$L13",null,{"children":"$L14"}]]}],false]],"m":"$undefined","G":["$15","$undefined"],"s":false,"S":true}
16:"$Sreact.suspense"
17:I[74911,[],"AsyncMetadata"]
14:["$","div",null,{"hidden":true,"children":["$","$16",null,{"fallback":null,"children":["$","$L17",null,{"promise":"$@18"}]}]}]
e:null
12:[["$","meta","0",{"charSet":"utf-8"}],["$","meta","1",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
d:null
10:{"metadata":[["$","title","0",{"children":"AR.IO Docs"}],["$","meta","1",{"name":"description","content":"AR.IO is a decentralized compute network that makes the permaweb more accessible."}],["$","link","2",{"rel":"icon","href":"/docs-v2/favicon.ico","type":"image/x-icon","sizes":"16x16"}]],"error":null,"digest":"$undefined"}
18:{"metadata":"$10:metadata","error":null,"digest":"$undefined"}
