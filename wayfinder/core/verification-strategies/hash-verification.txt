1:"$Sreact.fragment"
2:I[60881,["9268","static/chunks/aaea2bcf.432631bb317559fe.js","3975","static/chunks/3975.65073ecd7686b488.js","8602","static/chunks/8602.7f2210cb40bc95fb.js","3758","static/chunks/3758.69daa9d9751a2510.js","7066","static/chunks/7066.9ea237f8271c6a3e.js","5760","static/chunks/5760.a98d11e1f0c7c227.js","7948","static/chunks/7948.fe33dfc7f94c2ca6.js","7177","static/chunks/app/layout.5e2b427ee998fd12.js"],"Providers"]
3:I[41056,["9268","static/chunks/aaea2bcf.432631bb317559fe.js","3975","static/chunks/3975.65073ecd7686b488.js","8602","static/chunks/8602.7f2210cb40bc95fb.js","3758","static/chunks/3758.69daa9d9751a2510.js","7066","static/chunks/7066.9ea237f8271c6a3e.js","5760","static/chunks/5760.a98d11e1f0c7c227.js","7948","static/chunks/7948.fe33dfc7f94c2ca6.js","7177","static/chunks/app/layout.5e2b427ee998fd12.js"],"Layout"]
4:I[87555,[],""]
5:I[31295,[],""]
6:I[30122,["3975","static/chunks/3975.65073ecd7686b488.js","4345","static/chunks/app/not-found.28cf6d37da7270ee.js"],"default"]
7:I[87254,["9268","static/chunks/aaea2bcf.432631bb317559fe.js","3975","static/chunks/3975.65073ecd7686b488.js","8602","static/chunks/8602.7f2210cb40bc95fb.js","6493","static/chunks/6493.a59dcbabb32c712c.js","5760","static/chunks/5760.a98d11e1f0c7c227.js","5842","static/chunks/5842.70a45a0df0a47415.js","8383","static/chunks/app/wayfinder/core/verification-strategies/hash-verification/page.f7a45d2b5c170ba7.js"],"Heading"]
8:I[81571,["9268","static/chunks/aaea2bcf.432631bb317559fe.js","3975","static/chunks/3975.65073ecd7686b488.js","8602","static/chunks/8602.7f2210cb40bc95fb.js","6493","static/chunks/6493.a59dcbabb32c712c.js","5760","static/chunks/5760.a98d11e1f0c7c227.js","5842","static/chunks/5842.70a45a0df0a47415.js","8383","static/chunks/app/wayfinder/core/verification-strategies/hash-verification/page.f7a45d2b5c170ba7.js"],"Code"]
9:I[81571,["9268","static/chunks/aaea2bcf.432631bb317559fe.js","3975","static/chunks/3975.65073ecd7686b488.js","8602","static/chunks/8602.7f2210cb40bc95fb.js","6493","static/chunks/6493.a59dcbabb32c712c.js","5760","static/chunks/5760.a98d11e1f0c7c227.js","5842","static/chunks/5842.70a45a0df0a47415.js","8383","static/chunks/app/wayfinder/core/verification-strategies/hash-verification/page.f7a45d2b5c170ba7.js"],"Pre"]
b:I[60445,["9268","static/chunks/aaea2bcf.432631bb317559fe.js","3975","static/chunks/3975.65073ecd7686b488.js","8602","static/chunks/8602.7f2210cb40bc95fb.js","6493","static/chunks/6493.a59dcbabb32c712c.js","5760","static/chunks/5760.a98d11e1f0c7c227.js","5842","static/chunks/5842.70a45a0df0a47415.js","8383","static/chunks/app/wayfinder/core/verification-strategies/hash-verification/page.f7a45d2b5c170ba7.js"],"default"]
c:I[73019,["9268","static/chunks/aaea2bcf.432631bb317559fe.js","3975","static/chunks/3975.65073ecd7686b488.js","8602","static/chunks/8602.7f2210cb40bc95fb.js","6493","static/chunks/6493.a59dcbabb32c712c.js","5760","static/chunks/5760.a98d11e1f0c7c227.js","5842","static/chunks/5842.70a45a0df0a47415.js","8383","static/chunks/app/wayfinder/core/verification-strategies/hash-verification/page.f7a45d2b5c170ba7.js"],"Feedback"]
d:I[59665,[],"OutletBoundary"]
10:I[74911,[],"AsyncMetadataOutlet"]
12:I[59665,[],"ViewportBoundary"]
14:I[59665,[],"MetadataBoundary"]
16:I[26614,[],""]
:HL["/docs-v2/_next/static/css/1018a7a2809d4a87.css","style"]
a:T1c26,<span><span style="color: var(--shiki-token-keyword)">import</span><span style="color: var(--shiki-color-text)"> { HashVerificationStrategy</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> Wayfinder } </span><span style="color: var(--shiki-token-keyword)">from</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;@ar.io/wayfinder-core&#39;</span></span>
<span></span>
<span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">wayfinder</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">new</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">Wayfinder</span><span style="color: var(--shiki-color-text)">({ </span><span style="color: var(--shiki-token-comment)">/* ...global wayfinder configuration */</span><span style="color: var(--shiki-color-text)">  });</span></span>
<span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">verificationStrategy</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">new</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">HashVerificationStrategy</span><span style="color: var(--shiki-color-text)">({</span></span>
<span><span style="color: var(--shiki-color-text)">  trustedGateways</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> [</span><span style="color: var(--shiki-token-keyword)">new</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">URL</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;https://arweave.net&#39;</span><span style="color: var(--shiki-color-text)">)]</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">})</span></span>
<span></span>
<span><span style="color: var(--shiki-token-comment)">// use it in a request</span></span>
<span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">verifiedData</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">wayfinder</span><span style="color: var(--shiki-token-function)">.request</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;ar://&lt;some-tx-id&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">  verificationSettings</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">    enabled</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">true</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">    strategy</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> verificationStrategy</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">    strict</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">true</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-comment)">// block the flow of bytes until verification has passed</span></span>
<span><span style="color: var(--shiki-color-text)">    events: {</span></span>
<span><span style="color: var(--shiki-color-text)">      </span><span style="color: var(--shiki-token-function)">onVerificationProgress</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> (e) </span><span style="color: var(--shiki-token-keyword)">=&gt;</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">        </span><span style="color: var(--shiki-token-constant)">console</span><span style="color: var(--shiki-token-function)">.debug</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;Verification progress: ${ e.processBytes / e.totalBytes * 100}%)</span></span>
<span><span style="color: var(--shiki-color-text)">      }</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">      onVerificationFailed: (e) </span><span style="color: var(--shiki-token-keyword)">=&gt;</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">        </span><span style="color: var(--shiki-token-constant)">console</span><span style="color: var(--shiki-token-function)">.error</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;Verification failed!, e)</span></span>
<span><span style="color: var(--shiki-color-text)">      }</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">      onVerificationSucceeded: (e) </span><span style="color: var(--shiki-token-keyword)">=&gt;</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">        </span><span style="color: var(--shiki-token-constant)">console</span><span style="color: var(--shiki-token-function)">.log</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;Verification succeeded!, e)</span></span>
<span><span style="color: var(--shiki-color-text)">      }</span></span>
<span><span style="color: var(--shiki-color-text)">    }</span></span>
<span><span style="color: var(--shiki-color-text)">  }</span></span>
<span><span style="color: var(--shiki-color-text)">})</span></span>
<span></span>0:{"P":null,"b":"7W4r0KJ4eNMq82TYtQzCG","p":"/docs-v2","c":["","wayfinder","core","verification-strategies","hash-verification"],"i":false,"f":[[["",{"children":["wayfinder",{"children":["core",{"children":["verification-strategies",{"children":["hash-verification",{"children":["__PAGE__",{}]}]}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/docs-v2/_next/static/css/1018a7a2809d4a87.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"en","className":"h-full","suppressHydrationWarning":true,"children":["$","body",null,{"className":"flex min-h-full bg-white antialiased dark:bg-zinc-900","children":["$","$L2",null,{"children":["$","$L3",null,{"children":["$","$L4",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","$L6",null,{}],[]],"forbidden":"$undefined","unauthorized":"$undefined"}]}]}]}]}]]}],{"children":["wayfinder",["$","$1","c",{"children":[null,["$","$L4",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["core",["$","$1","c",{"children":[null,["$","$L4",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["verification-strategies",["$","$1","c",{"children":[null,["$","$L4",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["hash-verification",["$","$1","c",{"children":[null,["$","$L4",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":[["$","article",null,{"className":"flex h-full w-full flex-col pb-10 pt-16","children":[["$","div",null,{"className":"flex-auto prose w-full dark:prose-invert","children":[["$","h1",null,{"children":"HashVerificationStrategy"}],"\n",["$","$L7",null,{"level":2,"id":"overview","children":"Overview"}],"\n",["$","p",null,{"language":"txt","children":["The ",["$","$L8",null,{"children":"HashVerificationStrategy"}]," verifies data integrity by comparing SHA-256 hashes of fetched data against trusted gateway digest headers. This strategy provides fast, cryptographically secure verification for high-throughput applications."]}],"\n",["$","$L7",null,{"level":2,"id":"how-it-works","children":"How It Works"}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":[["$","strong",null,{"children":"Fetch Data"}],": Retrieve content from the selected gateway"]}],"\n",["$","li",null,{"children":[["$","strong",null,{"children":"Request Digest"}],": Get the digest from trusted gateways via HTTP headers using HEAD/GET requests from a trusted gatweay"]}],"\n",["$","li",null,{"children":[["$","strong",null,{"children":"Compute Hash"}],": Calculate the SHA-256 hash of the received data"]}],"\n",["$","li",null,{"children":[["$","strong",null,{"children":"Compare"}],": Verify that both hashes match exactly"]}],"\n",["$","li",null,{"children":[["$","strong",null,{"children":"Result"}],": Pass or fail based on hash comparison"]}],"\n"]}],"\n",["$","$L7",null,{"level":2,"id":"basic-usage","children":"Basic Usage"}],"\n",["$","$L9",null,{"language":"javascript","code":"import { HashVerificationStrategy, Wayfinder } from '@ar.io/wayfinder-core'\n\nconst wayfinder = new Wayfinder({ /* ...global wayfinder configuration */  });\nconst verificationStrategy = new HashVerificationStrategy({\n  trustedGateways: [new URL('https://arweave.net')],\n})\n\n// use it in a request\nconst verifiedData = await wayfinder.request('ar://<some-tx-id', {\n  verificationSettings: {\n    enabled: true,\n    strategy: verificationStrategy,\n    strict: true // block the flow of bytes until verification has passed\n    events: {\n      onVerificationProgress: (e) => {\n        console.debug('Verification progress: ${ e.processBytes / e.totalBytes * 100}%)\n      },\n      onVerificationFailed: (e) => {\n        console.error('Verification failed!, e)\n      },\n      onVerificationSucceeded: (e) => {\n        console.log('Verification succeeded!, e)\n      }\n    }\n  }\n})\n","children":["$","$L8",null,{"className":"language-javascript","children":"$a"}]}],"\n",["$","$L7",null,{"level":2,"id":"related","children":"Related"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":[["$","strong",null,{"children":["$","$Lb",null,{"href":"/wayfinder/verification-strategies/signature-verification","children":"Signature Verification"}]}],": Understand authenticity validation"]}],"\n",["$","li",null,{"children":[["$","strong",null,{"children":["$","$Lb",null,{"href":"/wayfinder/verification-strategies/data-root-verification","children":"Data Root Verification"}]}],": Explore maximum security verification"]}],"\n"]}]]}],["$","footer",null,{"className":"mx-auto mt-16 w-full max-w-2xl lg:max-w-5xl","children":["$","$Lc",null,{}]}]]}],null,["$","$Ld",null,{"children":["$Le","$Lf",["$","$L10",null,{"promise":"$@11"}]]}]]}],{},null,false]},null,false]},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,["$","$1","vPfD8andWjLFYLEJREAVwv",{"children":[["$","$L12",null,{"children":"$L13"}],null]}],["$","$L14",null,{"children":"$L15"}]]}],false]],"m":"$undefined","G":["$16","$undefined"],"s":false,"S":true}
17:"$Sreact.suspense"
18:I[74911,[],"AsyncMetadata"]
15:["$","div",null,{"hidden":true,"children":["$","$17",null,{"fallback":null,"children":["$","$L18",null,{"promise":"$@19"}]}]}]
f:null
13:[["$","meta","0",{"charSet":"utf-8"}],["$","meta","1",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
e:null
11:{"metadata":[["$","title","0",{"children":"Hash Verification Strategy - AR.IO Docs"}],["$","meta","1",{"name":"description","content":"Fast integrity verification by comparing SHA-256 hashes of fetched data against trusted gateway digest headers for high-throughput applications."}],["$","meta","2",{"property":"og:title","content":"Hash Verification Strategy"}],["$","meta","3",{"property":"og:description","content":"Fast integrity verification by comparing SHA-256 hashes of fetched data against trusted gateway digest headers for high-throughput applications."}],["$","meta","4",{"name":"twitter:card","content":"summary"}],["$","meta","5",{"name":"twitter:title","content":"Hash Verification Strategy"}],["$","meta","6",{"name":"twitter:description","content":"Fast integrity verification by comparing SHA-256 hashes of fetched data against trusted gateway digest headers for high-throughput applications."}],["$","link","7",{"rel":"icon","href":"/docs-v2/favicon.ico","type":"image/x-icon","sizes":"16x16"}]],"error":null,"digest":"$undefined"}
19:{"metadata":"$11:metadata","error":null,"digest":"$undefined"}
