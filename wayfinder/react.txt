1:"$Sreact.fragment"
2:I[60881,["9268","static/chunks/aaea2bcf-432631bb317559fe.js","3975","static/chunks/3975-65073ecd7686b488.js","5227","static/chunks/5227-c718075fe01526db.js","3758","static/chunks/3758-69daa9d9751a2510.js","7066","static/chunks/7066-9ea237f8271c6a3e.js","7948","static/chunks/7948-fe33dfc7f94c2ca6.js","7177","static/chunks/app/layout-339e4c6cd5adcd52.js"],"Providers"]
3:I[41056,["9268","static/chunks/aaea2bcf-432631bb317559fe.js","3975","static/chunks/3975-65073ecd7686b488.js","5227","static/chunks/5227-c718075fe01526db.js","3758","static/chunks/3758-69daa9d9751a2510.js","7066","static/chunks/7066-9ea237f8271c6a3e.js","7948","static/chunks/7948-fe33dfc7f94c2ca6.js","7177","static/chunks/app/layout-339e4c6cd5adcd52.js"],"Layout"]
4:I[87555,[],""]
5:I[31295,[],""]
6:I[30122,["3975","static/chunks/3975-65073ecd7686b488.js","4345","static/chunks/app/not-found-28cf6d37da7270ee.js"],"default"]
7:I[87254,["9268","static/chunks/aaea2bcf-432631bb317559fe.js","3975","static/chunks/3975-65073ecd7686b488.js","5227","static/chunks/5227-c718075fe01526db.js","6493","static/chunks/6493-a59dcbabb32c712c.js","465","static/chunks/465-0fbb9cc11ad8feb4.js","4934","static/chunks/app/wayfinder/react/page-f23e33951dceb710.js"],"Heading"]
8:I[81571,["9268","static/chunks/aaea2bcf-432631bb317559fe.js","3975","static/chunks/3975-65073ecd7686b488.js","5227","static/chunks/5227-c718075fe01526db.js","6493","static/chunks/6493-a59dcbabb32c712c.js","465","static/chunks/465-0fbb9cc11ad8feb4.js","4934","static/chunks/app/wayfinder/react/page-f23e33951dceb710.js"],"Code"]
9:I[81571,["9268","static/chunks/aaea2bcf-432631bb317559fe.js","3975","static/chunks/3975-65073ecd7686b488.js","5227","static/chunks/5227-c718075fe01526db.js","6493","static/chunks/6493-a59dcbabb32c712c.js","465","static/chunks/465-0fbb9cc11ad8feb4.js","4934","static/chunks/app/wayfinder/react/page-f23e33951dceb710.js"],"Pre"]
e:I[60445,["9268","static/chunks/aaea2bcf-432631bb317559fe.js","3975","static/chunks/3975-65073ecd7686b488.js","5227","static/chunks/5227-c718075fe01526db.js","6493","static/chunks/6493-a59dcbabb32c712c.js","465","static/chunks/465-0fbb9cc11ad8feb4.js","4934","static/chunks/app/wayfinder/react/page-f23e33951dceb710.js"],"default"]
f:I[73019,["9268","static/chunks/aaea2bcf-432631bb317559fe.js","3975","static/chunks/3975-65073ecd7686b488.js","5227","static/chunks/5227-c718075fe01526db.js","6493","static/chunks/6493-a59dcbabb32c712c.js","465","static/chunks/465-0fbb9cc11ad8feb4.js","4934","static/chunks/app/wayfinder/react/page-f23e33951dceb710.js"],"Feedback"]
10:I[59665,[],"OutletBoundary"]
13:I[74911,[],"AsyncMetadataOutlet"]
15:I[59665,[],"ViewportBoundary"]
17:I[59665,[],"MetadataBoundary"]
19:I[26614,[],""]
:HL["/docs-v2/_next/static/css/79a0b2a497090510.css","style"]
a:T760,<span><span style="color: var(--shiki-token-keyword)">import</span><span style="color: var(--shiki-color-text)"> { WayfinderProvider } </span><span style="color: var(--shiki-token-keyword)">from</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;@ar.io/wayfinder-react&#39;</span></span>
<span><span style="color: var(--shiki-token-keyword)">import</span><span style="color: var(--shiki-color-text)"> { ARIO } </span><span style="color: var(--shiki-token-keyword)">from</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;@ar.io/sdk&#39;</span></span>
<span></span>
<span><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">App</span><span style="color: var(--shiki-color-text)">() {</span></span>
<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> (</span></span>
<span><span style="color: var(--shiki-color-text)">    &lt;</span><span style="color: var(--shiki-token-constant)">WayfinderProvider</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span><span style="color: var(--shiki-color-text)">      &lt;</span><span style="color: var(--shiki-token-constant)">YourApp</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span><span style="color: var(--shiki-color-text)">    &lt;/</span><span style="color: var(--shiki-token-constant)">WayfinderProvider</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span><span style="color: var(--shiki-color-text)">  )</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>b:T1101,<span><span style="color: var(--shiki-token-keyword)">import</span><span style="color: var(--shiki-color-text)"> { useWayfinderRequest } </span><span style="color: var(--shiki-token-keyword)">from</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;@ar.io/wayfinder-react&#39;</span></span>
<span></span>
<span><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">MyComponent</span><span style="color: var(--shiki-color-text)">() {</span></span>
<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">request</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">useWayfinderRequest</span><span style="color: var(--shiki-color-text)">()</span></span>
<span></span>
<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">handleFetch</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">async</span><span style="color: var(--shiki-color-text)"> () </span><span style="color: var(--shiki-token-keyword)">=&gt;</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">response</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">request</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;ar://transaction-id&#39;</span><span style="color: var(--shiki-color-text)">)</span></span>
<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">data</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">response</span><span style="color: var(--shiki-token-function)">.text</span><span style="color: var(--shiki-color-text)">()</span></span>
<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">console</span><span style="color: var(--shiki-token-function)">.log</span><span style="color: var(--shiki-color-text)">(data)</span></span>
<span><span style="color: var(--shiki-color-text)">  }</span></span>
<span></span>
<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> &lt;</span><span style="color: var(--shiki-token-string-expression)">button</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">onClick</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)">{handleFetch}&gt;Fetch Data&lt;/</span><span style="color: var(--shiki-token-string-expression)">button</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>c:T65e,import { WayfinderProvider } from '@ar.io/wayfinder-react'
import {
  NetworkGatewaysProvider,
  PreferredWithFallbackRoutingStrategy,
  FastestPingRoutingStrategy,
  HashVerificationStrategy,
  StaticGatewaysProvider,
} from '@ar.io/wayfinder-core'
import { ARIO } from '@ar.io/sdk'

function App() {
  return (
    <WayfinderProvider
      gatewaysProvider={new NetworkGatewaysProvider({ ario: ARIO.mainnet() })}
      routingSettings={{
        strategy: new PreferredWithFallbackRoutingStrategy({
          preferredGateway: 'https://my-gateway.com',
          fallbackStrategy: new FastestPingRoutingStrategy({ timeoutMs: 500 }),
        }),
        events: {
          onRoutingSucceeded: (event) =>
            console.log('Gateway selected:', event.selectedGateway),
          onRoutingFailed: (error) => console.error('Routing failed:', error),
        },
      }}
      verificationSettings={{
        enabled: true,
        strategy: new HashVerificationStrategy({
          trustedGateways: ['https://arweave.net'],
        }),
        strict: false,
        events: {
          onVerificationSucceeded: (event) =>
            console.log('Verified:', event.txId),
          onVerificationFailed: (error) =>
            console.error('Verification failed:', error),
        },
      }}
      telemetrySettings={{
        enabled: process.env.NODE_ENV === 'production',
        clientName: 'my-react-app',
        clientVersion: process.env.REACT_APP_VERSION || '1.0.0',
        sampleRate: 0.05,
        exporterUrl: process.env.REACT_APP_TELEMETRY_URL,
      }}
    >
      <YourApp />
    </WayfinderProvider>
  )
}
d:T3b76,<span><span style="color: var(--shiki-token-keyword)">import</span><span style="color: var(--shiki-color-text)"> { WayfinderProvider } </span><span style="color: var(--shiki-token-keyword)">from</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;@ar.io/wayfinder-react&#39;</span></span>
<span><span style="color: var(--shiki-token-keyword)">import</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">  NetworkGatewaysProvider</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">  PreferredWithFallbackRoutingStrategy</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">  FastestPingRoutingStrategy</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">  HashVerificationStrategy</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">  StaticGatewaysProvider</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">} </span><span style="color: var(--shiki-token-keyword)">from</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;@ar.io/wayfinder-core&#39;</span></span>
<span><span style="color: var(--shiki-token-keyword)">import</span><span style="color: var(--shiki-color-text)"> { ARIO } </span><span style="color: var(--shiki-token-keyword)">from</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;@ar.io/sdk&#39;</span></span>
<span></span>
<span><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">App</span><span style="color: var(--shiki-color-text)">() {</span></span>
<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> (</span></span>
<span><span style="color: var(--shiki-color-text)">    &lt;</span><span style="color: var(--shiki-token-constant)">WayfinderProvider</span></span>
<span><span style="color: var(--shiki-color-text)">      </span><span style="color: var(--shiki-token-function)">gatewaysProvider</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)">{</span><span style="color: var(--shiki-token-keyword)">new</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">NetworkGatewaysProvider</span><span style="color: var(--shiki-color-text)">({ ario</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">ARIO</span><span style="color: var(--shiki-token-function)">.mainnet</span><span style="color: var(--shiki-color-text)">() })}</span></span>
<span><span style="color: var(--shiki-color-text)">      </span><span style="color: var(--shiki-token-function)">routingSettings</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)">{{</span></span>
<span><span style="color: var(--shiki-color-text)">        strategy</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">new</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">PreferredWithFallbackRoutingStrategy</span><span style="color: var(--shiki-color-text)">({</span></span>
<span><span style="color: var(--shiki-color-text)">          preferredGateway</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;https://my-gateway.com&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">          fallbackStrategy</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">new</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">FastestPingRoutingStrategy</span><span style="color: var(--shiki-color-text)">({ timeoutMs</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">500</span><span style="color: var(--shiki-color-text)"> })</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">        })</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">        events</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">          </span><span style="color: var(--shiki-token-function)">onRoutingSucceeded</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> (event) </span><span style="color: var(--shiki-token-keyword)">=&gt;</span></span>
<span><span style="color: var(--shiki-color-text)">            </span><span style="color: var(--shiki-token-constant)">console</span><span style="color: var(--shiki-token-function)">.log</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;Gateway selected:&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">event</span><span style="color: var(--shiki-color-text)">.selectedGateway)</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">          </span><span style="color: var(--shiki-token-function)">onRoutingFailed</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> (error) </span><span style="color: var(--shiki-token-keyword)">=&gt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">console</span><span style="color: var(--shiki-token-function)">.error</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;Routing failed:&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> error)</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">        }</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">      }}</span></span>
<span><span style="color: var(--shiki-color-text)">      </span><span style="color: var(--shiki-token-function)">verificationSettings</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)">{{</span></span>
<span><span style="color: var(--shiki-color-text)">        enabled</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">true</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">        strategy</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">new</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">HashVerificationStrategy</span><span style="color: var(--shiki-color-text)">({</span></span>
<span><span style="color: var(--shiki-color-text)">          trustedGateways</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> [</span><span style="color: var(--shiki-token-string-expression)">&#39;https://arweave.net&#39;</span><span style="color: var(--shiki-color-text)">]</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">        })</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">        strict</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">false</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">        events</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> {</span></span>
<span><span style="color: var(--shiki-color-text)">          </span><span style="color: var(--shiki-token-function)">onVerificationSucceeded</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> (event) </span><span style="color: var(--shiki-token-keyword)">=&gt;</span></span>
<span><span style="color: var(--shiki-color-text)">            </span><span style="color: var(--shiki-token-constant)">console</span><span style="color: var(--shiki-token-function)">.log</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;Verified:&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">event</span><span style="color: var(--shiki-color-text)">.txId)</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">          </span><span style="color: var(--shiki-token-function)">onVerificationFailed</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> (error) </span><span style="color: var(--shiki-token-keyword)">=&gt;</span></span>
<span><span style="color: var(--shiki-color-text)">            </span><span style="color: var(--shiki-token-constant)">console</span><span style="color: var(--shiki-token-function)">.error</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;Verification failed:&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> error)</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">        }</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">      }}</span></span>
<span><span style="color: var(--shiki-color-text)">      </span><span style="color: var(--shiki-token-function)">telemetrySettings</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)">{{</span></span>
<span><span style="color: var(--shiki-color-text)">        enabled</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">process</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">env</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">NODE_ENV</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">===</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;production&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">        clientName</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;my-react-app&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">        clientVersion</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">process</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">env</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">REACT_APP_VERSION</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">||</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;1.0.0&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">        sampleRate</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0.05</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">        exporterUrl</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">process</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">env</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">REACT_APP_TELEMETRY_URL</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span><span style="color: var(--shiki-color-text)">      }}</span></span>
<span><span style="color: var(--shiki-color-text)">    &gt;</span></span>
<span><span style="color: var(--shiki-color-text)">      &lt;</span><span style="color: var(--shiki-token-constant)">YourApp</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span><span style="color: var(--shiki-color-text)">    &lt;/</span><span style="color: var(--shiki-token-constant)">WayfinderProvider</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span><span style="color: var(--shiki-color-text)">  )</span></span>
<span><span style="color: var(--shiki-color-text)">}</span></span>
<span></span>0:{"P":null,"b":"b2KuH_4Vsh4RoXyVHVx6A","p":"/docs-v2","c":["","wayfinder","react"],"i":false,"f":[[["",{"children":["wayfinder",{"children":["react",{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/docs-v2/_next/static/css/79a0b2a497090510.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"en","className":"h-full","suppressHydrationWarning":true,"children":["$","body",null,{"className":"flex min-h-full bg-white antialiased dark:bg-zinc-900","children":["$","$L2",null,{"children":["$","$L3",null,{"children":["$","$L4",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","$L6",null,{}],[]],"forbidden":"$undefined","unauthorized":"$undefined"}]}]}]}]}]]}],{"children":["wayfinder",["$","$1","c",{"children":[null,["$","$L4",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["react",["$","$1","c",{"children":[null,["$","$L4",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":[["$","article",null,{"className":"flex h-full w-full flex-col pb-10 pt-16","children":[["$","div",null,{"className":"flex-auto prose w-full dark:prose-invert","children":[["$","h1",null,{"children":"@ar.io/wayfinder-react"}],"\n",["$","$L7",null,{"level":2,"id":"overview","children":"Overview"}],"\n",["$","p",null,{"language":"txt","children":["The ",["$","$L8",null,{"children":"@ar.io/wayfinder-react"}]," package provides React-specific components and hooks for integrating Wayfinder into React applications. It offers a provider pattern for configuration and convenient hooks for fetching data with built-in loading states and error handling."]}],"\n",["$","div",null,{"className":"border-l-4 border-orange-500 bg-gray-800 text-white p-4 rounded-md","children":[["$","div",null,{"className":"font-semibold text-lg text-orange-300 mb-2","children":"Smart Defaults"}],["$","div",null,{"className":"text-sm","children":["$","p",null,{"language":"txt","children":["Wayfinder React automatically configures optimal settings for web\napplications, including ",["$","$L8",null,{"children":"LocalStorageGatewaysProvider"}]," to avoid rate limits\nand performance optimizations in hooks to prevent unnecessary rerenders."]}]}]]}],"\n",["$","$L7",null,{"level":2,"id":"installation","children":"Installation"}],"\n",["$","$L9",null,{"language":"bash","code":"npm install @ar.io/wayfinder-react @ar.io/wayfinder-core\n# or\nyarn add @ar.io/wayfinder-react @ar.io/wayfinder-core\n","children":["$","$L8",null,{"className":"language-bash","children":"<span><span style=\"color: var(--shiki-token-function)\">npm</span><span style=\"color: var(--shiki-color-text)\"> </span><span style=\"color: var(--shiki-token-string)\">install</span><span style=\"color: var(--shiki-color-text)\"> </span><span style=\"color: var(--shiki-token-string)\">@ar.io/wayfinder-react</span><span style=\"color: var(--shiki-color-text)\"> </span><span style=\"color: var(--shiki-token-string)\">@ar.io/wayfinder-core</span></span>\n<span><span style=\"color: var(--shiki-token-comment)\"># or</span></span>\n<span><span style=\"color: var(--shiki-token-function)\">yarn</span><span style=\"color: var(--shiki-color-text)\"> </span><span style=\"color: var(--shiki-token-string)\">add</span><span style=\"color: var(--shiki-color-text)\"> </span><span style=\"color: var(--shiki-token-string)\">@ar.io/wayfinder-react</span><span style=\"color: var(--shiki-color-text)\"> </span><span style=\"color: var(--shiki-token-string)\">@ar.io/wayfinder-core</span></span>\n<span></span>"}]}],"\n",["$","$L7",null,{"level":2,"id":"quick-start","children":"Quick Start"}],"\n",["$","h3",null,{"children":"1. Add the Wayfinder Context Provider"}],"\n",["$","$L9",null,{"language":"jsx","code":"import { WayfinderProvider } from '@ar.io/wayfinder-react'\nimport { ARIO } from '@ar.io/sdk'\n\nfunction App() {\n  return (\n    <WayfinderProvider>\n      <YourApp />\n    </WayfinderProvider>\n  )\n}\n","children":["$","$L8",null,{"className":"language-jsx","children":"$a"}]}],"\n",["$","div",null,{"className":"border-l-4 border-orange-500 bg-gray-800 text-white p-4 rounded-md","children":[["$","div",null,{"className":"font-semibold text-lg text-orange-300 mb-2","children":"Default Configuration"}],["$","div",null,{"className":"text-sm","children":["$","p",null,{"language":"txt","children":["Wayfinder React automatically uses ",["$","$L8",null,{"children":"LocalStorageGatewaysProvider"}]," with\n",["$","$L8",null,{"children":"NetworkGatewaysProvider"}]," to avoid rate limits and improve performance. You\ndon't need to configure this manually unless you want custom settings."]}]}]]}],"\n",["$","h3",null,{"children":"2. Use Hooks in Your Components"}],"\n",["$","$L9",null,{"language":"jsx","code":"import { useWayfinderRequest } from '@ar.io/wayfinder-react'\n\nfunction MyComponent() {\n  const request = useWayfinderRequest()\n\n  const handleFetch = async () => {\n    const response = await request('ar://transaction-id')\n    const data = await response.text()\n    console.log(data)\n  }\n\n  return <button onClick={handleFetch}>Fetch Data</button>\n}\n","children":["$","$L8",null,{"className":"language-jsx","children":"$b"}]}],"\n",["$","h4",null,{"children":"Advanced Configuration"}],"\n",["$","$L9",null,{"language":"jsx","code":"$c","children":["$","$L8",null,{"className":"language-jsx","children":"$d"}]}],"\n",["$","$L7",null,{"level":2,"id":"related","children":"Related"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":[["$","strong",null,{"children":["$","$Le",null,{"href":"/wayfinder/react/use-wayfinder","children":"useWayfinder"}]}],": Access the complete Wayfinder instance"]}],"\n",["$","li",null,{"children":[["$","strong",null,{"children":["$","$Le",null,{"href":"/wayfinder/react/use-wayfinder-request","children":"useWayfinderRequest"}]}],": Direct access to the request function"]}],"\n",["$","li",null,{"children":[["$","strong",null,{"children":["$","$Le",null,{"href":"/wayfinder/react/use-wayfinder-url","children":"useWayfinderUrl"}]}],": URL resolution with loading states"]}],"\n"]}],"\n",["$","p",null,{"children":["For more advanced configuration options, see the ",["$","$Le",null,{"href":"/wayfinder/core","children":"Core Documentation"}],"."]}]]}],["$","footer",null,{"className":"mx-auto mt-16 w-full max-w-2xl lg:max-w-5xl","children":["$","$Lf",null,{}]}]]}],null,["$","$L10",null,{"children":["$L11","$L12",["$","$L13",null,{"promise":"$@14"}]]}]]}],{},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,["$","$1","EwkH0KALx1SB719l0bk-nv",{"children":[["$","$L15",null,{"children":"$L16"}],null]}],["$","$L17",null,{"children":"$L18"}]]}],false]],"m":"$undefined","G":["$19","$undefined"],"s":false,"S":true}
1a:"$Sreact.suspense"
1b:I[74911,[],"AsyncMetadata"]
18:["$","div",null,{"hidden":true,"children":["$","$1a",null,{"fallback":null,"children":["$","$L1b",null,{"promise":"$@1c"}]}]}]
12:null
16:[["$","meta","0",{"charSet":"utf-8"}],["$","meta","1",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
11:null
14:{"metadata":[["$","title","0",{"children":"@ar.io/wayfinder-react - AR.IO Docs"}],["$","meta","1",{"name":"description","content":"React-specific components and hooks for integrating Wayfinder into React applications."}],["$","meta","2",{"property":"og:title","content":"@ar.io/wayfinder-react"}],["$","meta","3",{"property":"og:description","content":"React-specific components and hooks for integrating Wayfinder into React applications."}],["$","meta","4",{"name":"twitter:card","content":"summary"}],["$","meta","5",{"name":"twitter:title","content":"@ar.io/wayfinder-react"}],["$","meta","6",{"name":"twitter:description","content":"React-specific components and hooks for integrating Wayfinder into React applications."}],["$","link","7",{"rel":"icon","href":"/docs-v2/favicon.ico","type":"image/x-icon","sizes":"16x16"}]],"error":null,"digest":"$undefined"}
1c:{"metadata":"$14:metadata","error":null,"digest":"$undefined"}
